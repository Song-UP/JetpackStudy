apply plugin: 'com.android.application'

android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "com.song.songup.lifecycleapp"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}
def lifecycle_version = "1.1.1"
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//lifycycle
//    implementation "android.arch.lifecycle:runtime:1.1.1"
//    implementation "android.arch.lifecycle:extensions:1.1.1"


    //minSdk<24
//    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    // //     java8 使用这个依赖，minsdkversion 大于等于 24，否则编译不通过，
    // 区别与上面的是增加了 DefaultLifecyceObserver,不需要注释也可以绑定 LifecycleOwner 的生命周期上，
    // 使用交方便，不需要再去定义一个BaseLifecycleObserver接口
    implementation "android.arch.lifecycle:common-java8:1.1.1"


}
